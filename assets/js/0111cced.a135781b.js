"use strict";(self.webpackChunkweb_site=self.webpackChunkweb_site||[]).push([[2781],{8198:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var o=n(4848),i=n(8453);const r={sidebar_label:"General Implementation",sidebar_position:3},l="General implementation",a={id:"Tutorials/General_Implementation",title:"General implementation",description:"MotionLight can be applied across various systems to run motion profiles, so having a general solution is crucial. Below is a generalized pseudocode about how to work with the `motion.light.txt` files.",source:"@site/docs/Tutorials/General_Implementation.md",sourceDirName:"Tutorials",slug:"/Tutorials/General_Implementation",permalink:"/MotionLight/docs/Tutorials/General_Implementation",draft:!1,unlisted:!1,editUrl:"https://github.com/HectorAlonso18/MotionLight/docs/Tutorials/General_Implementation.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_label:"General Implementation",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"How to use Motion Light?",permalink:"/MotionLight/docs/Tutorials/How_to_use_motion_light"},next:{title:"Implementations in Different Programming Language",permalink:"/MotionLight/docs/Tutorials/Languages_Examples"}},s={},c=[];function m(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"general-implementation",children:"General implementation"})}),"\n",(0,o.jsxs)(t.p,{children:["MotionLight can be applied across various systems to run motion profiles, so having a general solution is crucial. Below is a generalized pseudocode about how to work with the ",(0,o.jsx)(t.code,{children:"motion.light.txt"})," files."]}),"\n",(0,o.jsxs)(t.p,{children:["For more information about ",(0,o.jsx)(t.code,{children:"motion.light"})," file click ",(0,o.jsx)(t.a,{href:"/MotionLight/docs/Tutorials/How_to_use_motion_light#the-motionlight-file",children:"here"})]}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsxs)(t.li,{children:["You can create a function to read ",(0,o.jsx)(t.code,{children:"motion.light"})," files"]}),"\n"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-c",metastring:'title="Pseudocode"',children:'FUNCTION GetMotionLightVector(motion_file_name)\r\n\r\n    // Open the file using the provided file name\r\n    Open motion_file using motion_file_name\r\n\r\n    // Check if the file is successfully opened\r\n    IF motion_file is not open THEN\r\n        PRINT "Error: unable to open file"\r\n        RETURN empty vector\r\n    END IF\r\n\r\n    // Initialize an empty vector to store velocities\r\n    velocities_vector = EMPTY VECTOR\r\n\r\n    // Initialize an index to track line number\r\n    line_index = 0\r\n\r\n    // Read the file line by line\r\n    WHILE there are lines left in the file DO\r\n        Read current line\r\n\r\n        // Ignore the first line\r\n        IF line_index > 0 THEN\r\n            // Convert the line to a float value\r\n            velocity_value = Convert current line to float\r\n\r\n            // Add the velocity value to the vector\r\n            Append velocity_value to velocities_vector\r\n        END IF\r\n\r\n        // Increment the line index\r\n        line_index = line_index + 1\r\n    END WHILE\r\n\r\n    // Return the velocities vector\r\n    RETURN velocities_vector\r\n\r\nEND FUNCTION\n'})}),"\n",(0,o.jsxs)(t.ol,{start:"2",children:["\n",(0,o.jsx)(t.li,{children:"Then just invoke the function and store the results in a vector or array."}),"\n"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-c",metastring:'title="Pseudocode"',children:'MAIN\r\n    // Load the velocities from the motion light file into a vector\r\n    velocity_vector = GetMotionLightVector("my_motion.light.txt"); \r\n\r\n    // Iterate through each velocity in the vector\r\n    FOR EACH velocity IN velocity_vector\r\n        // Move the motor using the corresponding velocity\r\n        move_motor(velocity)\r\n        \r\n        // Wait for the sample time before moving to the next velocity\r\n        // For delay time use the same value from your simulation!\r\n        DELAY: sample time \r\n\r\n    ENDFOR\r\n\r\nEND\n'})}),"\n",(0,o.jsx)(t.admonition,{type:"tip",children:(0,o.jsx)(t.p,{children:"Its highly recommend that you delay time be equal to the same sample time that you used in the MotionLight Simulation."})}),"\n",(0,o.jsxs)(t.ol,{start:"3",children:["\n",(0,o.jsx)(t.li,{children:"You may want to convert the motion.light file\xb4s velocity to a motor velocity unit, like: RPM, rad/s, etc."}),"\n"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-c",metastring:'title="Pseudocode"',children:'MAIN\r\n    // Load the velocities from the motion light file into a vector\r\n    velocity_vector = GetMotionLightVector("my_motion.light.txt"); \r\n    \r\n    // Motor diameter in meters\r\n    Diameter = 1\r\n\r\n    // Iterate through each velocity in the vector\r\n    FOR EACH velocity IN velocity_vector\r\n        \r\n        // Example: Transform velocity in m/s to motor RPMs\r\n        motor_velocity = (velocity * 60) / (PI * Diameter)\r\n\r\n        // Move the motor using the corresponding velocity in RPM\r\n        move_motor(motor_velocity)\r\n        \r\n        // Wait for the sample time before moving to the next velocity\r\n        // For delay time use the same value from your simulation!\r\n        DELAY: sample time \r\n\r\n    ENDFOR\r\n\r\nEND\n'})}),"\n",(0,o.jsx)(t.p,{children:"Good \ud83d\ude0a, with this generic example you are able to implement the MotionLight's files to your specific implementation. However, feel free to take a look to the other tutorials to see different specific implementations."}),"\n",(0,o.jsx)(t.p,{children:"On the other hand, you can always copy the velocity vector from the MotionLight\xb4s terminal to your code."}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"Terminal",src:n(3e3).A+"",width:"1920",height:"202"})})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(m,{...e})}):m(e)}},3e3:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/Terminal-27a53eabb311142a471b57e52fd46d78.png"},8453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>a});var o=n(6540);const i={},r=o.createContext(i);function l(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);